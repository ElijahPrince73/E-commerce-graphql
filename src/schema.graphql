type Query {
  products: [Product!]
  categories: [Category!]
  userInfo(id: String!): User
  cart(userId: String!): Cart
}

type Mutation {
  addToCart(userId: ID!, productId: ID!): Cart
  deleteFromCart(productId: ID!): Product!
  signup(email: String!, password: String!): AuthPayload
  login(email: String, password: String!): AuthPayload
}

type AuthPayload {
  token: String
  user: User
}

type User {
  id: ID!
  email: String! 
  cart: Cart
  orders: [Order]
}

type Cart {
  id: ID!
  user: User
  items: [Product!]!
}

type Product {
  id: ID!
  productName: String!
  productDescription: String!
  price: Int!
  images: [Image!]!
  sku: String!
  category: Category!
  inCart: [User]!
}

type Order {
  id: ID!
  productList: [Product!]!
  email: String!
  address: String!
  address2: String
  zip: String!
  totalAmount: Int!
  orderInt: Int!
  items: Int!
  orderedBy: [User!]!
}

type Image {
  id: ID!
  alt: String!
}

type Category {
  id: ID!
  categoryName: String!
  categoryDescription: String!
  productList: [Product!]!
  image: String!
}
